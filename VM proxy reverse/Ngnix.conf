Ngnix.conf

user nginx;
worker_processes auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx/nginx.pid;

events {
    worker_connections 1024;
}

http {
    # HTTP/2 activé proprement (évite "listen ... http2" déprécié)
    http2 on;

    # Logs
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" "$http_user_agent" '
                    '$request_time $upstream_response_time $host';
    access_log /var/log/nginx/access.log main;

    # TLS
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 1h;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    # Buffers / timeouts
    gzip on;
    sendfile on;
    client_max_body_size 100m;
    proxy_read_timeout  60s;
    proxy_connect_timeout 10s;

    # Emplacements pour fichiers temporaires (doivent être écrivable)
    proxy_temp_path        /var/cache/nginx/proxy_temp;
    client_body_temp_path  /var/cache/nginx/client_temp;
    # (si usage futur)
    # fastcgi_temp_path    /var/cache/nginx/fastcgi_temp;
    # uwsgi_temp_path      /var/cache/nginx/uwsgi_temp;
    # scgi_temp_path       /var/cache/nginx/scgi_temp;

    # En-têtes de sécurité
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    include /etc/nginx/conf.d/*.conf;
}


-------------------------------------------------------------------

user www-data;


events {
worker_connections 1024;
}


http {
include /etc/nginx/mime.types;
default_type application/octet-stream;


# Sécurité & discrétion
server_tokens off;


# Logs
log_format main '$remote_addr - $remote_user [$time_local] "$request" '
'$status $body_bytes_sent "$http_referer" "$http_user_agent" '
'$request_time $upstream_response_time $host';
access_log /var/log/nginx/access.log main;


# TLS
ssl_session_cache shared:SSL:10m;
ssl_session_timeout 1h;
ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:!aNULL:!MD5:!DES:!RC4';
ssl_prefer_server_ciphers off; # inutile en TLSv1.3
ssl_session_tickets off;
# OCSP stapling (si fullchain contient l'intermédiaire)
ssl_stapling on;
ssl_stapling_verify on;
resolver 1.1.1.1 1.0.0.1 valid=300s ipv6=off;


# Compression sûre
gzip on;
gzip_types text/plain text/css application/json application/javascript application/xml image/svg+xml;


# Limites & timeouts
client_max_body_size 100m;
sendfile on;
keepalive_timeout 65s;
proxy_connect_timeout 10s;
proxy_read_timeout 60s;
proxy_send_timeout 60s;


# Dossiers temporaires (doivent être writable)
proxy_temp_path /var/cache/nginx/proxy_temp;
client_body_temp_path /var/cache/nginx/client_temp;


# En-têtes de sécurité globaux
add_header X-Content-Type-Options "nosniff" always;
add_header X-Frame-Options "SAMEORIGIN" always;
add_header Referrer-Policy "strict-origin-when-cross-origin" always;
add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;


# Endpoint local pour healthcheck
server {
listen 80;
server_name _;
location = /health { return 200 'ok'; add_header Content-Type text/plain; }
location / { return 444; }
}


# Sous Debian **natif** (hors Docker), vous pouvez aussi utiliser :
# include /etc/nginx/sites-enabled/*;
# Ici, on garde conf.d pour compatibilité Docker & Debian.
include /etc/nginx/conf.d/*.conf;
}