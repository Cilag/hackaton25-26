---
- name: Install Nginx
  dnf:
    name: nginx
    state: present

- name: Create SSL directory
  file:
    path: "{{ ssl_certificate_path }}"
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Generate self-signed SSL certificate
  command: >
    openssl req -x509 -nodes -days 365 -newkey rsa:2048
    -keyout {{ ssl_certificate_path }}/{{ ssl_private_key_name }}
    -out {{ ssl_certificate_path }}/{{ ssl_certificate_name }}
    -subj "/C=FR/ST=France/L=Paris/O=Company/CN={{ domain_name }}"
  args:
    creates: "{{ ssl_certificate_path }}/{{ ssl_certificate_name }}"

- name: Set SSL certificate permissions
  file:
    path: "{{ ssl_certificate_path }}/{{ item }}"
    owner: root
    group: nginx
    mode: '0640'
  with_items:
    - "{{ ssl_certificate_name }}"
    - "{{ ssl_private_key_name }}"

- name: Remove default Nginx configuration
  file:
    path: /etc/nginx/nginx.conf
    state: absent

- name: Deploy main Nginx configuration
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
    owner: root
    group: root
    mode: '0644'
    backup: yes
  notify: restart nginx

- name: Create sites-available and sites-enabled directories
  file:
    path: "/etc/nginx/{{ item }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
  with_items:
    - sites-available
    - sites-enabled

- name: Deploy services configuration
  template:
    src: services.conf.j2
    dest: /etc/nginx/sites-available/services.conf
    owner: root
    group: root
    mode: '0644'
  notify: restart nginx

- name: Enable services site
  file:
    src: /etc/nginx/sites-available/services.conf
    dest: /etc/nginx/sites-enabled/services.conf
    state: link
  notify: restart nginx

- name: Create log directory
  file:
    path: /var/log/nginx
    state: directory
    owner: nginx
    group: nginx
    mode: '0755'

- name: Deploy custom index page
  template:
    src: index.html.j2
    dest: /usr/share/nginx/html/index.html
    owner: root
    group: root
    mode: '0644'

- name: Configure SELinux for Nginx
  seboolean:
    name: "{{ item }}"
    state: yes
    persistent: yes
  with_items:
    - httpd_can_network_connect
    - httpd_can_network_relay
  ignore_errors: yes

- name: Enable and start Nginx
  systemd:
    name: nginx
    enabled: yes
    state: started

- name: Test Nginx configuration
  command: nginx -t
  register: nginx_test
  changed_when: false
  failed_when: nginx_test.rc != 0